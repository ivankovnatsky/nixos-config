# Global settings
{
	# Log configuration
	log {
		output file @logPathPrefix@/caddy/caddy.log {
			roll_size 10MB
			roll_keep 10
			roll_keep_for 48h
		}
		format json
		level INFO
	}

	# Configure storage location explicitly
	storage file_system {
		root /var/lib/caddy
	}

	# Configure ACME for external domains
	email @letsEncryptEmail@

	# Default ACME configuration - use cloudflare DNS challenge globally
	acme_dns cloudflare @cloudflareApiToken@
}

# Single wildcard certificate for all subdomains
# Use *.externalDomain to request a wildcard certificate
*.@externalDomain@ {
	bind @bindAddress@

	# Enable proper TLS with Let's Encrypt using DNS challenge for wildcard cert
	# https://caddyserver.com/docs/automatic-https#wildcard-certificates
	# https://caddy.community/t/how-to-use-dns-provider-modules-in-caddy-2/8148
	tls {
		dns cloudflare @cloudflareApiToken@
		# Use external DNS resolvers for ACME challenges
		# https://caddy.community/t/could-not-determine-zone-for-domain/18720/7
		resolvers 1.1.1.1 8.8.8.8
	}

	@prowlarr host prowlarr.@externalDomain@
	reverse_proxy @prowlarr @beeIp@:9696

	@radarr host radarr.@externalDomain@
	reverse_proxy @radarr @beeIp@:7878

	@sonarr host sonarr.@externalDomain@
	reverse_proxy @sonarr @beeIp@:8989

	@transmission host transmission.@externalDomain@
	reverse_proxy @transmission @beeIp@:9091

	@plex host plex.@externalDomain@
	reverse_proxy @plex @beeIp@:32400 {
		# Enable WebSocket support
		header_up X-Real-IP {remote_host}
		header_up Host {host}
		# Increase timeouts for streaming
		transport http {
			keepalive 12h
			keepalive_idle_conns 100
		}
	}

	@grafana host grafana.@externalDomain@
	reverse_proxy @grafana @beeIp@:3000 {
		# Enable WebSocket support
		header_up X-Real-IP {remote_host}
		header_up Host {host}
	}

	# FlareSolverr proxy server
	# @flaresolverr host flaresolverr.@externalDomain@
	# reverse_proxy @flaresolverr @beeIp@:8191 {
	#	# Enable WebSocket support
	#	header_up X-Real-IP {remote_host}
	#	header_up Host {host}
	# }

	@audiobookshelf host audiobookshelf.@externalDomain@
	reverse_proxy @audiobookshelf @beeIp@:8000 {
		# Enable WebSocket support
		header_up X-Real-IP {remote_host}
		header_up Host {host}
	}

	@jellyfin host jellyfin.@externalDomain@
	reverse_proxy @jellyfin @beeIp@:8096 {
		# Enable WebSocket support
		header_up X-Real-IP {remote_host}
		header_up Host {host}
		# Increase timeouts for streaming
		transport http {
			keepalive 12h
			keepalive_idle_conns 100
		}
	}

	@homeassistant host homeassistant.@externalDomain@
	reverse_proxy @homeassistant @beeIp@:8123

	@openwebui host openwebui.@externalDomain@
	reverse_proxy @openwebui @miniIp@:30080 {
		# Route to Caddy ingress controller NodePort
		# The ingress controller handles routing to K8s services
		header_up X-Real-IP {remote_host}
		header_up Host {host}
		# Increase timeouts for large model responses
		transport http {
			keepalive 30s
			response_header_timeout 300s
		}
	}

	@sync-bee host sync-bee.@externalDomain@
	reverse_proxy @sync-bee @beeIp@:8384

	# Files server for bee
	@files-bee host files-bee.@externalDomain@
	reverse_proxy @files-bee @beeIp@:8080 {
		# Headers for proper operation
		header_up X-Real-IP {remote_host}
		header_up Host {host}
		# Increase timeouts and buffer sizes for large directories and files
		transport http {
			keepalive 30s
			response_header_timeout 30s
		}
	}

	# Netdata
	@netdata-bee host netdata-bee.@externalDomain@
	handle @netdata-bee {
		# Basic authentication for all paths
		basic_auth /* {
			@netdataBeeUsername@ @netdataBeePassword@
		}
		# Proxy to Netdata
		reverse_proxy @beeIp@:19999 {
			# Enable WebSocket support
			header_up X-Real-IP {remote_host}
			header_up Host {host}
		}
	}

	# Zigbee2MQTT web interface
	@zigbee host zigbee.@externalDomain@
	handle @zigbee {
		# Basic authentication for all paths
		basic_auth /* {
			@zigbeeUsername@ @zigbeePassword@
		}
		# Proxy to Zigbee2MQTT web interface
		reverse_proxy @beeIp@:8081 {
			# Enable WebSocket support for live updates
			header_up X-Real-IP {remote_host}
			header_up Host {host}
		}
	}

	@sync-mini host sync-mini.@externalDomain@
	reverse_proxy @sync-mini @miniIp@:8384

	# Netdata mini
	@netdata-mini host netdata-mini.@externalDomain@
	handle @netdata-mini {
		# Basic authentication for all paths
		basic_auth /* {
			@netdataMiniUsername@ @netdataMiniPassword@
		}
		# FIXME: Should be fixed in nix-darwin or upstream?
		# Redirect root to v1 dashboard
		redir / /v1/ 302
		redir /index.html /v1/ 302
		# Proxy to Netdata
		reverse_proxy @miniIp@:19999 {
			# Enable WebSocket support
			header_up X-Real-IP {remote_host}
			header_up Host {host}
		}
	}

	# Miniserve on Mac mini
	@files-mini host files-mini.@externalDomain@
	reverse_proxy @files-mini @miniIp@:8080 {
		# Headers for proper operation
		header_up X-Real-IP {remote_host}
		header_up Host {host}
		# Increase timeouts and buffer sizes for large directories and files
		transport http {
			keepalive 30s
			response_header_timeout 30s
		}
	}

	# Homebridge UI
	@homebridge host homebridge.@externalDomain@
	handle @homebridge {
		# Proxy to Homebridge UI
		reverse_proxy @beeIp@:8581 {
			header_up X-Real-IP {remote_host}
			header_up Host {host}
		}
	}

	# Matterbridge UI
	@matterbridge host matterbridge.@externalDomain@
	handle @matterbridge {
		# Proxy to Matterbridge UI
		reverse_proxy @beeIp@:8283 {
			header_up X-Real-IP {remote_host}
			header_up Host {host}
		}
	}

	# DNS over HTTPS for bee
	@dns-bee host dns-bee.@externalDomain@
	reverse_proxy @dns-bee /dns-query http://@beeIp@:8053 {
		# Enable client IP forwarding for EDNS
		header_up X-Real-IP {remote_host}
		header_up Host {host}
	}

	# DNS over HTTPS for mini
	@dns-mini host dns-mini.@externalDomain@
	reverse_proxy @dns-mini /dns-query http://@miniIp@:8053 {
		# Enable client IP forwarding for EDNS
		header_up X-Real-IP {remote_host}
		header_up Host {host}
	}

	@bin host bin.@externalDomain@
	reverse_proxy @bin @miniIp@:8820 {
		header_up X-Real-IP {remote_host}
		header_up Host {host}
	}

	@ollama host ollama.@externalDomain@
	reverse_proxy @ollama {
		# Primary backend (a3w) listed first, failover to mini
		to @a3wIp@:11434 @miniIp@:11434
		
		# Use first available backend (a3w priority)
		lb_policy first
		lb_try_duration 5s
		lb_try_interval 250ms
		
		# Health checks for both backends
		health_uri /
		health_interval 30s
		health_timeout 5s
		
		# Fail to next backend if primary is unhealthy
		fail_duration 30s
		
		# Headers for proper operation
		header_up X-Real-IP {remote_host}
		header_up Host {host}
		
		# Increase timeouts for large model responses
		transport http {
			keepalive 300s
			response_header_timeout 300s
			read_timeout 300s
		}
	}

	@stash host stash.@externalDomain@
	reverse_proxy @stash @beeIp@:9999 {
		# Enable WebSocket support
		header_up X-Real-IP {remote_host}
		header_up Host {host}
		# Increase timeouts for streaming
		transport http {
			keepalive 12h
			keepalive_idle_conns 100
		}
	}

	# Default fallback for wildcard (original behavior)
	reverse_proxy @beeIp@:80

	# Logging for ACME and DNS services
	log {
		output file @logPathPrefix@/caddy/acme-sync.log {
			roll_size 10MB
			roll_keep 5
		}
		output file @logPathPrefix@/caddy/dns-bee.log {
			roll_size 10MB
			roll_keep 5
		}
		output file @logPathPrefix@/caddy/dns-mini.log {
			roll_size 10MB
			roll_keep 5
		}
	}
}

# K8s NodePort forwarding (mini machine only)
:30080 {
	bind @bindAddress@
	reverse_proxy localhost:30080
}
